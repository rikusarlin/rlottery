syntax = "proto3";

package wagering;

import "google/protobuf/timestamp.proto";

// Represents a UUID (Universally Unique Identifier).
message Uuid {
  string value = 1;
}

// Represents a lottery operator configuration.
message LotteryOperatorConfig {
  uint32 id = 1;
  string name = 2;
}

// Represents a game configuration.
message GameConfig {
  Uuid id = 1;
  uint32 lottery_operator_id = 2;
  string name = 3;
}

// Represents a draw status.
enum DrawStatus {
  CREATED = 0;
  OPEN = 1;
  CLOSED = 2;
  DRAWN = 3;
  WINSET_CALCULATED = 4;
  WINSET_CONFIRMED = 5;
  FINALIZED = 6;
  CANCELLED = 7;
}

// Represents a draw.
message Draw {
  int32 id = 1;
  Uuid game_id = 2;
  DrawStatus status = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp modified_at = 5;
  google.protobuf.Timestamp open_time = 6;
  google.protobuf.Timestamp close_time = 7;
  google.protobuf.Timestamp draw_time = 8;
  google.protobuf.Timestamp winset_calculated_at = 9;
  google.protobuf.Timestamp winset_confirmed_at = 10;
  repeated WinningNumbers winning_numbers = 11;
}

message WinningNumbers {
  Uuid draw_level_id = 1;
  repeated uint32 numbers = 2;
}

// Represents a draw level.
message DrawLevel {
  Uuid id = 1;
  Uuid game_id = 2;
  string name = 3;
  uint32 number_of_selections = 4;
  uint32 min_value = 5;
  uint32 max_value = 6;
}

enum GameType {
  NORMAL = 0;
  SYSTEM = 1;
}

// Represents a wager.
message Wager {
  Uuid id = 1;
  Uuid user_id = 2;
  repeated Draw draws = 3;
  uint32 stake = 4;
  uint32 price = 5;
  repeated Board boards = 6;
  google.protobuf.Timestamp created_at = 7;
}

message Board {
  Uuid id = 1;
  GameType game_type = 2;
  repeated Selection selections = 3;
}

message PlaceWagerBoard {
  GameType game_type = 1;
  repeated PlaceWagerSelection selections = 2;
}

message Selection {
  Uuid id = 1;
  string name = 2;
  repeated int32 values = 3;
}

message PlaceWagerSelection {
  string name = 1;
  repeated int32 values = 2;
}

// Represents a win class type.
enum WinClassType {
  FACTOR = 0;
  CONSTANT = 1;
  PERCENTAGE = 2;
  EXTERNAL = 3;
}

// Represents a win class.
message WinClass {
  Uuid id = 1;
  Uuid game_id = 2;
  string name = 3;
  WinClassType type = 4;
  uint32 factor = 5;
  uint64 constant = 6;
  uint32 percentage = 7;
  uint64 min_cap = 8;
  uint64 max_cap = 9;
}

// Represents a winning.
message Winning {
  Uuid id = 1;
  Uuid wager_id = 2;
  Uuid win_class_id = 3;
  uint64 amount = 4;
}

// Represents an audit log.
message AuditLog {
  Uuid id = 1;
  string entity_type = 2;
  string entity_id = 3;
  string event_type = 4;
  string data = 5; // JSON string
  google.protobuf.Timestamp created_at = 6;
}

// Request to place a wager.
message PlaceWagerRequest {
  Uuid user_id = 1;
  repeated int32 draws = 2;
  repeated PlaceWagerBoard boards = 3;
  bool quick_pick = 4;
}

// Response after placing a wager.
message PlaceWagerResponse {
  Wager wager = 1;
}

// Request to get wager information.
message GetWagerRequest {
  Uuid wager_id = 1;
}

// Response with wager information.
message GetWagerResponse {
  Wager wager = 1;
}

service Wagering {
  rpc PlaceWager (PlaceWagerRequest) returns (PlaceWagerResponse);
  rpc GetWager (GetWagerRequest) returns (GetWagerResponse);
}